# sets projectwide variables and implicitely
# enables qmake to lookup the projectroot/features
# directory for possible feature files
#
# Any variable specified here, must be set manually
# inside the debian/rules file

load(qt_build_config)
CONFIG += warning_clean

MODULE_VERSION = 5.5.0

ROOT_SOURCE_DIR = $$PWD
ROOT_BUILD_DIR = $$shadowed($$PWD)

exists($$PWD/../qt.pro): CONFIG += qt_submodule_build

# Set QT_CLANG_*_VERSION if not defined to make internal qmake features
# (warnings_are_errors and others) work since these variables are defined only
# when clang is chosen as compiler at configure time. The regexp is based on the
# Qt one used in the qtbase configure script.
clang:!defined(QT_CLANG_MAJOR_VERSION, var) {
    QT_CLANG_MAJOR_VERSION = $$system("clang -v 2>&1 | sed -n -E '/^clang version /{s///; s/^([0-9]*)\.([0-9]*).*$/\1/;p;q;}'")
    QT_CLANG_MINOR_VERSION = $$system("clang -v 2>&1 | sed -n -E '/^clang version /{s///; s/^([0-9]*)\.([0-9]*).*$/\2/;p;q;}'")
}

macx {
    # force SDK version to 10.9
    QMAKE_MACOSX_DEPLOYMENT_TARGET=10.9
}

# build UbuntuToolkit without namespace
# DEFINES += UBUNTUTOOLKIT_NO_NAMESPACE
# build UbuntuGestures without namespace
# DEFINES += UBUNTUGESTURES_NO_NAMESPACE
